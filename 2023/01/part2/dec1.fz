dec1 is

  numbers := [
    ("one"  , "1"),
    ("two"  , "2"),
    ("three", "3"),
    ("four" , "4"),
    ("five" , "5"),
    ("six"  , "6"),
    ("seven", "7"),
    ("eight", "8"),
    ("nine" , "9"),
    ]

  text_to_digit(s String) =>
    if s != ""
      f := for m in numbers do
             (t,d) := m
           until s.starts_with t then d
           else  s
      t := s.substring 1  # this should IMHO be s.substring to avoid counting overlaps twice as in "fiveight", but ok.
      f + text_to_digit t
    else
      s

  r := io.stdin.with ()->
    for
      sum := 0, sum + 10 * first + last
      l := io.buffered.read_line
    while l != "" do
      d := text_to_digit l
      digits := d.as_codepoints
                 .filter x->(codepoint.type.ascii_digit.contains x.val)
      first := digits.first.parse_i32.val
      last  := digits.last .parse_i32.val
    else
      sum

  say r
