dec11_part2 is

  LM : mutate is
  input := LM ! ()->
    (io.stdin.reader LM) ! ()->(io.buffered LM .read_lines).filter !=""
     .map s->(s.as_codepoints.map (="#"))
  image := array2 input.count input.first.val.count i,j->input[i][j]

  part12(f u64) =>
    xs := image.indices0
    ys := image.indices1
    expand_rows := ys.map (y -> ys âˆ€ (x -> !image[y,x]))
    expand_cols := xs.map (x -> xs âˆ€ (y -> !image[y,x]))

    galaxies => image.index_pairs.filter yx->{y,x := yx; image[y,x]}

    dist1(exp, s, e) => ((s..e-1).map i->(if exp[i] then f else u64 1)).sum
    dist(a,b) =>
      dx := dist1 expand_cols a.values.1 b.values.1
      dy := dist1 expand_rows a.values.0 b.values.0
      dx + dy

    (galaxies.pairs galaxies
             .map ab->{a,b := ab; dist a b}).sum

  part1 => part12 2
  part2 => part12 1000000

  say "part1 $part1 part2 $part2"
