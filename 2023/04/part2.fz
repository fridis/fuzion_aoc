dec4_part2 is

  lines =>
    o := io.stdin.with ()->
      for
        li list String := nil, li ++ [l]
        l := io.buffered.read_line
      while l != ""  else
        li
    o.val.as_array

  card(s String) is
    wy(i) => ((s.split ":")[1].split "|")[i].split.map (.parse_i32.val)
    win => wy 0
    you => wy 1
    matches => ((win.combine you (=)).filter x->x).count
    winning => 1 << matches >> 1

  cards := (lines.map (s->card s)).as_array

  part1 := cards.map (.winning)
                .fold i32.type.sum

  lm : mutate.
  part2 := lm.go ()->
    a := (lm.array i32).type.new lm cards.count 1
    for i in cards.indices do
      m := cards[i].matches
      for j in i+1..i+m do
        a[j] := a[j] + a[i]
    a.fold i32.type.sum

  say "dec 4: $part1 $part2"
