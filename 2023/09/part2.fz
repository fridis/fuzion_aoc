dec9_part2 is

  ls := (io.stdin.with ()->io.buffered.read_lines).val

  # parse input into sequence of sequence of i32
  seqs := ls.map_sequence s->(s.split.map (.parse_i32.val)).as_array

  # find new first and last elements to extend given sequence at both ends
  #
  extend(sq Sequence i32) =>
    if sq âˆ€ =0 then
      (0,0)                                               # 0..0 is easy, just add 0 on both ends
    else
      di := extend (sq.map_pairs a,b->b-a).as_array       # extend diffs
      (sq.first - di.values.0, sq.last + di.values.1)     # use diffs to determine first + last

  ex := (seqs.map (s -> extend s)).as_array
  part1 => (ex.map (.values.1)).fold i32.type.sum
  part2 => (ex.map (.values.0)).fold i32.type.sum

  say "part1 $part1 part2 $part2"
