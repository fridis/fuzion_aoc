dec13 =>

  input := io.stdin
             .read_string.trim
             .replace "Button A: X+" ""
             .replace "Button B: X+" ""
             .replace ", Y+" " "
             .replace "Prize: X=" ""
             .replace ", Y=" " "
             .replace "\n" " "
             .split "  " .map (.split " " .map (.parse_i64.val))
             .map (x -> claw x[0] x[1] x[2] x[3] x[4] x[5])

  claw(ax,ay,bx,by,px,py) is
    cost =>
      # since px = ax*a + bx*b, py = ay*a + by*b, we get
      a := (py*bx - px*by) / (ay*bx - ax*by)
      b := (px-ax*a)/bx
      if ay*a+by*b = py
        a*3+b
      else
        0

  part1 => input.map (.cost) |> sum

  part2 =>
    delta := i64 1E13
    input.map (c -> claw c.ax c.ay c.bx c.by c.px+delta c.py+delta)
         .map (.cost) |> sum

  say "$part1,$part2"
