dec4_part1 =>

  LM : mutate is
  input := LM ! ()->(io.stdin.reader LM) ! ()->(io.buffered LM .read_lines).filter !=""
                                                                     .map (.as_codepoints)

  area := array2 String input.count input[0].count i,j->input[i][j]

  get(y,x) =>
    if (y âˆˆ area.indices0) && (x âˆˆ area.indices1)
      area[y,x]
    else
      "."
  is_string(y,x,dy,dx,str) =>
    str.first ? nil         => true
              | c codepoint => get y x = c && is_string y+dy x+dx dy dx (str.drop 1)

  part1 =>
    dirs => [-1, 0, +1].pairs [-1, 0, +1]
    (area.index_pairs.pairs dirs)
      .filter v->
        yx, dd := v
        yy, xx := yx
        dy, dx := dd
        is_string yy xx dy dx "XMAS".as_codepoints
      .count

  is_x(y, x) =>
    ( (get y   x  ) = "A" &&
     ((get y-1 x-1) = "M" && (get y+1 x+1) = "S" ||
      (get y-1 x-1) = "S" && (get y+1 x+1) = "M"    ) &&
     ((get y-1 x+1) = "M" && (get y+1 x-1) = "S" ||
      (get y-1 x+1) = "S" && (get y+1 x-1) = "M"    )    )

  part2 => area.index_pairs.filter (yx -> is_x yx.0 yx.1)
                           .count

  say part1
  say part2
